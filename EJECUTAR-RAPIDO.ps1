# INSTRUCCIONES DE EJECUCI√ìN R√ÅPIDA
# Gu√≠a paso a paso para ejecutar el proyecto Selenium ABP

Write-Host "=== PROYECTO SELENIUM ABP - GU√çA DE EJECUCI√ìN R√ÅPIDA ===" -ForegroundColor Green
Write-Host ""

Write-Host "üìã OPCIONES DE EJECUCI√ìN:" -ForegroundColor Cyan
Write-Host "   1. Instalaci√≥n autom√°tica completa (recomendado)" -ForegroundColor White
Write-Host "   2. Instalaci√≥n manual paso a paso" -ForegroundColor White
Write-Host "   3. Solo ejecutar tests (si ya tienes Java/Maven)" -ForegroundColor White
Write-Host ""

$opcion = Read-Host "Selecciona una opci√≥n (1-3)"

switch ($opcion) {
    "1" {
        Write-Host ""
        Write-Host "üîß INSTALACI√ìN AUTOM√ÅTICA COMPLETA" -ForegroundColor Yellow
        Write-Host "   Esta opci√≥n instalar√° Java 11 y Maven autom√°ticamente" -ForegroundColor White
        Write-Host "   Requiere permisos de administrador" -ForegroundColor White
        Write-Host ""
        
        $confirmar = Read-Host "¬øContinuar con instalaci√≥n autom√°tica? (s/n)"
        if ($confirmar -eq "s" -or $confirmar -eq "S") {
            Write-Host "‚ñ∂Ô∏è  Ejecutando instalaci√≥n autom√°tica..." -ForegroundColor Cyan
            Start-Process PowerShell -ArgumentList "-ExecutionPolicy Bypass -File `"$PWD\instalar-herramientas.ps1`"" -Verb RunAs -Wait
            Write-Host "‚úÖ Instalaci√≥n completada" -ForegroundColor Green
            Write-Host "   Reinicia VS Code y ejecuta: mvn clean test" -ForegroundColor White
        }
    }
    
    "2" {
        Write-Host ""
        Write-Host "üõ†Ô∏è  INSTALACI√ìN MANUAL PASO A PASO" -ForegroundColor Yellow
        Write-Host ""
        Write-Host "PASO 1: Instalar Chocolatey (si no lo tienes)" -ForegroundColor Cyan
        Write-Host "   Ejecuta en PowerShell como administrador:" -ForegroundColor White
        Write-Host "   Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))" -ForegroundColor Gray
        Write-Host ""
        Write-Host "PASO 2: Instalar Java 11" -ForegroundColor Cyan
        Write-Host "   choco install openjdk11 -y" -ForegroundColor Gray
        Write-Host ""
        Write-Host "PASO 3: Instalar Maven" -ForegroundColor Cyan
        Write-Host "   choco install maven -y" -ForegroundColor Gray
        Write-Host ""
        Write-Host "PASO 4: Reiniciar PowerShell y ejecutar tests" -ForegroundColor Cyan
        Write-Host "   mvn clean test" -ForegroundColor Gray
        Write-Host ""
        Write-Host "ALTERNATIVAS SIN CHOCOLATEY:" -ForegroundColor Yellow
        Write-Host "   ‚Ä¢ winget install Microsoft.OpenJDK.11" -ForegroundColor White
        Write-Host "   ‚Ä¢ winget install Apache.Maven" -ForegroundColor White
    }
    
    "3" {
        Write-Host ""
        Write-Host "üöÄ EJECUTAR SOLO TESTS" -ForegroundColor Yellow
        Write-Host "   Verificando prerrequisitos..." -ForegroundColor White
        
        # Verificar Java
        try {
            $javaVersion = java -version 2>&1
            Write-Host "   ‚úÖ Java: $($javaVersion[0])" -ForegroundColor Green
        } catch {
            Write-Host "   ‚ùå Java no encontrado - instala Java 11 primero" -ForegroundColor Red
            exit 1
        }
        
        # Verificar Maven
        try {
            $mavenVersion = mvn -version 2>&1 | Select-Object -First 1
            Write-Host "   ‚úÖ Maven: $mavenVersion" -ForegroundColor Green
        } catch {
            Write-Host "   ‚ùå Maven no encontrado - instala Maven primero" -ForegroundColor Red
            exit 1
        }
        
        Write-Host ""
        Write-Host "üéØ OPCIONES DE EJECUCI√ìN:" -ForegroundColor Cyan
        Write-Host "   1. Todos los tests" -ForegroundColor White
        Write-Host "   2. Solo tests de login" -ForegroundColor White
        Write-Host "   3. Solo tests de registro" -ForegroundColor White
        Write-Host "   4. Test espec√≠fico por navegador" -ForegroundColor White
        
        $testOpcion = Read-Host "Selecciona opci√≥n de test (1-4)"
        
        switch ($testOpcion) {
            "1" {
                Write-Host "‚ñ∂Ô∏è  Ejecutando todos los tests..." -ForegroundColor Cyan
                mvn clean test
            }
            "2" {
                Write-Host "‚ñ∂Ô∏è  Ejecutando tests de login..." -ForegroundColor Cyan
                mvn test -Dtest=LoginTests
            }
            "3" {
                Write-Host "‚ñ∂Ô∏è  Ejecutando tests de registro..." -ForegroundColor Cyan
                mvn test -Dtest=RegistrationTests
            }
            "4" {
                $navegador = Read-Host "Especifica navegador (chrome/firefox)"
                Write-Host "‚ñ∂Ô∏è  Ejecutando tests en $navegador..." -ForegroundColor Cyan
                mvn test -Dbrowser=$navegador
            }
        }
        
        Write-Host ""
        Write-Host "üìä REPORTES GENERADOS:" -ForegroundColor Yellow
        Write-Host "   ‚Ä¢ HTML Report: reports/extent-report.html" -ForegroundColor White
        Write-Host "   ‚Ä¢ TestNG Report: target/surefire-reports/index.html" -ForegroundColor White
        Write-Host "   ‚Ä¢ Screenshots: reports/screenshots/" -ForegroundColor White
    }
    
    default {
        Write-Host ""
        Write-Host "‚ùå Opci√≥n no v√°lida" -ForegroundColor Red
        Write-Host "   Ejecuta el script de nuevo y selecciona 1, 2 o 3" -ForegroundColor White
    }
}

Write-Host ""
Write-Host "üìö DOCUMENTACI√ìN ADICIONAL:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ README.md - Descripci√≥n general del proyecto" -ForegroundColor White
Write-Host "   ‚Ä¢ SETUP_GUIDE.md - Gu√≠a detallada de configuraci√≥n" -ForegroundColor White
Write-Host "   ‚Ä¢ PROYECTO_COMPLETO.md - Documentaci√≥n t√©cnica completa" -ForegroundColor White
Write-Host ""
Write-Host "üåê SITIO DE PRUEBAS:" -ForegroundColor Cyan
Write-Host "   https://parabank.parasoft.com/parabank/index.htm" -ForegroundColor White
Write-Host ""
Write-Host "üë®‚Äçüíª CREDENCIALES DE PRUEBA:" -ForegroundColor Cyan
Write-Host "   Usuario: john / Contrase√±a: demo" -ForegroundColor White
Write-Host "   Usuario: admin / Contrase√±a: admin" -ForegroundColor White
Write-Host ""
Write-Host "Presiona cualquier tecla para salir..." -ForegroundColor Yellow
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
